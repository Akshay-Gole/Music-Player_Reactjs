{"version":3,"sources":["component/song.js","util.js","component/player.js","component/LibraryList.js","component/library.js","component/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","playAudio","playing","audioRef","playPromise","current","play","console","log","undefined","then","res","Player","setCurrentSong","setPlaying","currentTime","setCurrentTime","duration","songs","setSongs","useEffect","activeSong","map","actSong","id","active","timing","time","Math","floor","slice","skipHandler","direction","currentIndex","findIndex","song","length","min","max","value","onChange","e","target","type","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","LibraryList","Library","libraryStatus","Nav","setLibraryStatus","faMusic","Music","audio","uuidv4","App","useState","setDuration","useRef","timeHandler","endHandler","a","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc388285.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Song({currentSong}) {\n    // displaying picture, song name, artist\n    return (\n        <div className=\"song-comp\">\n            <img src={currentSong.cover} alt=\"\"/>\n            <h1>{currentSong.name}</h1>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    )\n}\n\nexport default Song\n","export const playAudio=(playing,audioRef)=>{\n    if(playing){\n        //  store the result of invoking audioRef.current.play(), \n        // and only act on it as a Promise chain if the result turns out to be non-undefined (eg. of type object).\n        // stackoverflow :- https://stackoverflow.com/questions/41293245/html5-video-play-returning-pending-promises/47223508\n        // Google web : https://developers.google.com/web/updates/2016/03/play-returns-promise\n        const playPromise = audioRef.current.play()\n        console.log(playPromise,\"  (1)  \")\n        if(playPromise !==undefined ){\n            playPromise.then((res)=>{\n                console.log(playPromise,'  (2)  ')\n                audioRef.current.play()\n            })\n        }\n    }\n}","import React,{ useEffect } from 'react'\n// importing icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay,faAngleLeft,faAngleRight,faPause} from '@fortawesome/free-solid-svg-icons'\n// Importing playAudio \nimport { playAudio } from '../util'\n\n\n\nfunction Player({setCurrentSong,currentSong, playing, setPlaying, audioRef,currentTime, setCurrentTime, duration, songs,setSongs }) {\n    \n    // useEffect for seting the active color on lib when we change song through skip buttons\n    useEffect( ()=>{\n        // to set the color on active song, here we update the state of songs.\n        const activeSong = songs.map(actSong =>{\n            if(actSong.id === currentSong.id){\n                return (\n                    {\n                        ...actSong,\n                        active:true\n                    }\n                )\n            }\n            else{\n                return (\n                    {\n                        ...actSong,\n                        active:false\n                    }\n                ) \n            }\n        })\n\n        setSongs(activeSong)\n    },[currentSong])\n\n\n    // Play event handler\n    const playHandler=()=>{\n        if(playing){\n            audioRef.current.pause()\n            setPlaying(!playing)\n        }\n        else{\n            audioRef.current.play()\n            setPlaying(!playing)\n        }\n    }\n\n    // time convertor from sec to mins\n    const timing=(time)=>{\n        return (\n            Math.floor(time/60) + ':' + ('0' + Math.floor(time%60)).slice(-2)\n        )\n    }\n\n    \n\n    // to change the the time in input range ( here currentTime is not a state it is a  value of audio element)\n    const inputHandler=(e)=>{\n        audioRef.current.currentTime = e.target.value\n        setCurrentTime(e.target.value)\n\n    }\n\n    // to handler skip next and skip back\n    const skipHandler=(direction)=>{\n        const currentIndex = songs.findIndex((song) => song.id===currentSong.id)\n        if(direction === 'skipNext'){\n            setCurrentSong(songs[(currentIndex+1)% songs.length])\n        }\n        if(direction === 'skipBack'){\n            if((currentIndex-1)% songs.length === -1){\n                setCurrentSong(songs[songs.length - 1])\n                playAudio(playing,audioRef)\n                return\n            }\n            setCurrentSong(songs[(currentIndex-1)% songs.length])\n        }\n        playAudio(playing,audioRef)\n\n    }\n\n    return (\n        <div className=\"player-comp\">\n            <div className=\"time-control\"> \n            {/* Adding start time and ending time with range to  show the procress */}\n                <p>{timing(currentTime)}</p>\n                <input min={0} max={duration || 0} value={currentTime } onChange={inputHandler} type=\"range\"/>\n                <p>{duration ? timing(duration) : '0:00'}</p>\n            </div>\n\n            <div className=\"play-control\">\n            {/* adding icons for play/stop , next , previous     \n            1->  in faplaya nd fapause we are using conditon if somg is playing then show different icon and \n            we are checking condition by playing state*/}\n                <FontAwesomeIcon onClick={()=>skipHandler(\"skipBack\")} className=\"skipBack-icon\" icon={faAngleLeft} size='2x'/>\n                <FontAwesomeIcon onClick={playHandler} className=\"play-icon\" icon={playing ? faPause : faPlay} size='2x'/>\n                <FontAwesomeIcon onClick={()=>skipHandler(\"skipNext\")} className=\"skipNext-icon\" icon={faAngleRight} size='2x'/>\n            </div>\n\n            \n        </div>\n    )\n}\n\nexport default Player\n","import React from 'react'\n// Importing playAudio \nimport { playAudio } from '../util'\n\n\n\n// this Component hold the info about songs\nfunction LibraryList({song, setCurrentSong, audioRef,playing,setSongs , songs }) {\n    const songChangeHandler=()=>{\n        // to set the color on active song, here we update the state of songs.\n        const activeSong = songs.map(actSong =>{\n            if(actSong.id === song.id){\n                return (\n                    {\n                        ...actSong,\n                        active:true\n                    }\n                )\n            }\n            else{\n                return (\n                    {\n                        ...actSong,\n                        active:false\n                    }\n                ) \n            }\n        })\n\n        setSongs(activeSong)\n        \n        setCurrentSong(song)\n        \n        playAudio(playing,audioRef)\n        \n        \n    }\n    return (\n        <div onClick={songChangeHandler} className={`libList-comp ${song.active ? 'select' : ''}`}> \n            <img src={song.cover} alt={song.name}/>\n        \n            <div className=\"libList-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default LibraryList\n","import React from 'react'\n// importing componet\nimport LibraryList from './LibraryList'\n\n\n\n// This function displays the list of all the songs.\n// It gets list of songs and then by map function we pass each song individually into LibraryList component\nfunction Library({songs, setCurrentSong, audioRef, playing, setSongs,libraryStatus}) {\n    return (\n        <div className={`library-comp ${libraryStatus ? 'active-library' : ''}`}>\n            <h1>Library</h1>\n            <div className=\"Library-list\">\n                {songs.map(song =>\n                    <LibraryList song={song} playing={playing} setCurrentSong={setCurrentSong}\n                     audioRef={audioRef} key={song.id}\n                     songs={songs} setSongs={setSongs}/>\n                )}\n            </div>\n        </div>\n    )\n}\nexport default Library","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMusic } from '@fortawesome/free-solid-svg-icons'\n\nfunction Nav({setLibraryStatus, libraryStatus}) {\n    return (\n        <nav className='nav'>\n            <h1>Mp3 Player</h1>\n            <button onClick={()=>setLibraryStatus(!libraryStatus)}>\n                Library \n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    )\n}\n\nexport default Nav\n","import { v4 as uuidv4 } from 'uuid'\n\nfunction Music(){\n    return [\n        {\n            name: \"Roses n Flames\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg\",\n            artist: \"C Y G N\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=14984\",\n            id: uuidv4(),\n            active:true,\n\n        },\n        {\n            name: \"Sunny in Saint Petersburg\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/7945133f0b1f4f167f056fe0c369f05f2ef415f2-1024x1024.jpg\",\n            artist: \"Saib\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=16075\",\n            id: uuidv4(),\n            active:false,\n\n        },\n        {\n            name: \"Reflect\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg\",\n            artist: \"Ben Belial\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=15234\",\n            id: uuidv4(),\n            active:false,\n\n        },\n        {\n            name: \"Soul Samba\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/630fbe3721ce9fa27e56b6b01c460f709fbce3b7-1024x1024.jpg\",\n            artist: \"Zmeyev\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=16061\",\n            id: uuidv4(),\n            active:false,\n\n        },\n        {\n            name: \"Lonely Waves\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/80be32197ca7971424bef5e4d0c6810e1d4334c6-1024x1024.jpg\",\n            artist: \"C Y G N\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=14980\",\n            id: uuidv4(),\n            active:false,\n\n        },\n        {\n            name: \"Beaver Creek\",\n            cover:\"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n            artist: \"Aso, Middle School, Aviino\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n            id: uuidv4(),\n            active: true,\n\n        },\n        {\n            name: \"Daylight\",\n            cover:\"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n            artist: \"Aiguille\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n            id: uuidv4(),\n            active: false,\n\n        },\n        {\n            name: \"Keep Going\",\n            cover:\"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n            artist: \"Swørn\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n            id: uuidv4(),\n            active: false,\n\n        },\n        {\n            name: \"Nightfall\",\n            cover:\"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n            artist: \"Aiguille\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n            id: uuidv4(),\n            active: false,\n\n        },\n        {\n            name: \"Reflection\",\n            cover:\"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n            artist: \"Swørn\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n            id: uuidv4(),\n            active: false,\n\n        },\n        {\n            name: \"Under the City Stars\",\n            cover:\"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n            artist: \"Aso, Middle School, Aviino\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n            id: uuidv4(),\n            active: false,\n\n        },\n    ]\n}\n\nexport default Music ","import React, {useRef, useState} from 'react'\n// adding components\nimport Song from './component/song'\nimport Player from './component/player'\nimport Library from './component/library'\nimport Nav from './component/Nav'\n// import styles\nimport './styles/app.scss'\n//  importing music's from util\nimport Music from './data'\n\nfunction App() {\n  // here Music() will return the list of objects which have all data \n  const [songs,setSongs]= useState(Music())\n  \n  // here song[0] shows the song for the very first time\n  const [currentSong,setCurrentSong]=useState(songs[0])\n\n  // for pasue and replay the song\n  const [playing,setPlaying] = useState(false)\n\n  // state for showing the time of the song\n  const [currentTime,setCurrentTime] = useState(0)\n\n  // state for showing the time of the song \n  const [duration, setDuration]= useState(0)\n\n  // State for library button, Is it open or not open\n  const [libraryStatus,setLibraryStatus]= useState(false)\n\n  // using ref for getting the audio HTML element\n  const audioRef= useRef()\n\n  // Time and duration event handler ( here currentTime andf Duration are not states they are values of audio element)\n  const timeHandler = (e)=>{\n    setCurrentTime(e.target.currentTime)\n    setDuration(e.target.duration)\n}\n  const endHandler =async ()=>{\n    const currentIndex = songs.findIndex((song)=> song.id===currentSong.id)\n    await setCurrentSong(songs[(currentIndex +1)% songs.length])\n    if(playing){\n      audioRef.current.play()\n    }\n  }\n  \n  return (\n    <div className={`App ${libraryStatus ? 'move-right' : ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n      <Song currentSong={currentSong}/>\n\n      <Player currentTime={currentTime} setCurrentTime={setCurrentTime} duration={duration}  \n        playing={playing} setPlaying={setPlaying} \n        currentSong={currentSong} audioRef={audioRef}\n        songs={songs} setSongs={setSongs} setCurrentSong={setCurrentSong} currentSong={currentSong}/>\n\n      <Library libraryStatus={libraryStatus} playing={playing} setCurrentSong={setCurrentSong} audioRef={audioRef} songs={songs} setSongs={setSongs}/>\n\n      {/* Audio player */}\n      <audio onTimeUpdate={timeHandler} onLoadedMetadata={timeHandler} ref ={audioRef} src={currentSong.audio} onEnded={endHandler} ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}